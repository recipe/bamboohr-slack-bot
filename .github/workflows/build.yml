name: build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      BOT: bamboohr-slack-bot

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set output
      id: vars
      run: |
        echo "release_version=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        echo "asset_name=${BOT}_${GITHUB_REF#refs/*/}_${GOOS}_${GOARCH}" >> $GITHUB_OUTPUT

    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.release_version }}
        ASSET_NAME: ${{ steps.vars.outputs.asset_name }}
      run: |
        echo $RELEASE_VERSION
        echo $ASSET_NAME

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.19

    - name: Get project dependencies
      run: go mod download

    - name: Build
      run: make build

    - name: Prepare a package
      run: |
        cp -v "bin/${BOT}" release
        cp -v config.yml-sample release
        export PKG="release/debian/${BOT}"
        mkdir -p "${PKG}/opt/${BOT}/bin"
        cp -v "bin/${BOT}" "${PKG}/opt/${BOT}/bin"
        \cp -fv config.yml-sample "${PKG}/etc/${BOT}"
        sed -i "s/Version:.*/Version: ${RELEASE_VERSION}/" "${PKG}/DEBIAN/control"
        sed -i "s/Architecture:.*/Architecture: ${GOARCH}/" "${PKG}/DEBIAN/control"
        chmod -v u+x "${PKG}/opt/${BOT}/bin/${BOT}" "${PKG}/DEBIAN/postinst" "${PKG}/DEBIAN/postrm"
        mv "${PKG}" "${PKG}_${RELEASE_VERSION}-1"
        pushd release || exit 1
        dpkg-deb -v --build "debian/${BOT}_${RELEASE_VERSION}-1"
        rm -frv debian
        popd || exit 1

    - name: Create a ZIP archive
      run: |
        pushd release || exit 1
        zip -9vr ../${{ steps.vars.outputs.asset_name }}.zip .
        popd || exit 1

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.vars.outputs.asset_name }}.zip
        tag: ${{ github.ref }}
        overwrite: true





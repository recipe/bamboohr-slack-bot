name: build

on:
  push:
    tags:
      - '*'

jobs:
  release:
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

  build:
    needs: [release]
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64]

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set output
      id: vars
      run: echo "asset_name=bamboohr-slack-bot_${GITHUB_REF#refs/*/}_${GOOS}_${GOARCH}" >> $GITHUB_OUTPUT

    - name: Check output
      env:
        ASSET_NAME: ${{ steps.vars.outputs.asset_name }}
      run: |
        echo $ASSET_NAME

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.19

    - name: Get project dependencies
      run: go mod download

    - name: Build
      run: make build

    - name: Prepare a package
      run: |
        mkdir -p ./build_assets
        cp bin/bamboohr-slack-bot ./build_assets
        cp -v config.yml-sample ./build_assets

    - name: Create a ZIP archive
      run: |
        pushd build_assets || exit 1
        zip -9vr ../${ASSET_NAME}.zip .
        popd || exit 1
        FILE=./${ASSET_NAME}.zip

#    - name: Upload a ZIP file to Artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: ${{ steps.vars.outputs.asset_name }}.zip
#        path: ${{ steps.vars.outputs.asset_name }}.zip

    - name: Publish an artifact to the release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ steps.vars.outputs.asset_name }}.zip






